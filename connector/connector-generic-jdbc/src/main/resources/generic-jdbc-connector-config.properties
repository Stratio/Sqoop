#
# Copyright (C) 2016 Stratio (http://stratio.com)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Generic JDBC Connector Resources

############################
# Link Config
#
linkConfig.label = Link configuration
linkConfig.help = You must supply the information requested in order to \
                   create a link object.

# jdbc driver
linkConfig.jdbcDriver.label = JDBC Driver Class
linkConfig.jdbcDriver.help = Enter the fully qualified class name of the JDBC \
                   driver that will be used for establishing this connection.\
                   Note: The driver jar must be in the sqoop lib directory.

# connect string
linkConfig.connectionString.label = JDBC Connection String
linkConfig.connectionString.help = Enter the value of JDBC connection string to be \
                   used by this connector for creating database connections.

# username string
linkConfig.username.label = Username
linkConfig.username.help = Enter the username to be used for connecting to the \
                   database.

# password string
linkConfig.password.label = Password
linkConfig.password.help = Enter the password to be used for connecting to the \
                   database.

# fetch size int
linkConfig.fetchSize.label = Fetch Size
linkConfig.fetchSize.help = Optional hint for JDBC fetch size. See  \
                   http://docs.oracle.com/javase/7/docs/api/java/sql/Statement.html#setFetchSize(int)

# jdbc properties
linkConfig.jdbcProperties.label = JDBC Connection Properties
linkConfig.jdbcProperties.help = Enter any JDBC properties that should be \
                   supplied during the creation of connection.

# From Job Config
#
fromJobConfig.label = From database configuration
fromJobConfig.help = You must supply the information requested below in order to create \
                 the FROM part of the job object

# From schema name
fromJobConfig.schemaName.label = Schema name
fromJobConfig.schemaName.help = Schema name to read data from 

# From table name
fromJobConfig.tableName.label = Table name
fromJobConfig.tableName.help = Table name to read data from

# From table SQL
fromJobConfig.sql.label = Table SQL statement
fromJobConfig.sql.help = SQL statement to read data from (Optional if table name is already given)

# From table columnList
fromJobConfig.columnList.label = Table column names
fromJobConfig.columnList.help = Specific columns in the given table name or the SQL query (Optional)

# From table partition column
fromJobConfig.partitionColumn.label = Partition column name
fromJobConfig.partitionColumn.help = A specific column for data partition (Optional)

# From table allow nulls in partition column
fromJobConfig.allowNullValueInPartitionColumn.label = Null value allowed for the partition column
fromJobConfig.allowNullValueInPartitionColumn.help = Whether there are null values in partition column (Defaults to false)

# From table boundary
fromJobConfig.boundaryQuery.label = Boundary query
fromJobConfig.boundaryQuery.help = The boundary query for data partition  (Optional)

# ToJob Config
#
toJobConfig.label = To database configuration
toJobConfig.help = You must supply the information requested in order to create \
                 the TO part of the job object.

# To schema name
toJobConfig.schemaName.label = Schema name
toJobConfig.schemaName.help = Schema name to write data into

# To table name
toJobConfig.tableName.label = Table name
toJobConfig.tableName.help = Table name to write data into

# To table SQL
toJobConfig.sql.label = Table SQL statement
toJobConfig.sql.help = SQL statement to use to write data into (Optional if table name is already given)

# To table columnList
toJobConfig.columnList.label = Table column names
toJobConfig.columnList.help = Specific columns to use in the given table name or the table SQL  (Optional)

# To stage table name
toJobConfig.stageTableName.label = Stage table name
toJobConfig.stageTableName.help = Name of the staging table to use (Optional)

# To clear stage table
toJobConfig.shouldClearStageTable.label = Should clear stage table
toJobConfig.shouldClearStageTable.help = Indicate if the stage table should be cleared (Defaults to false)

# Incremental related configuration
incrementalRead.label = Incremental read
incrementalRead.help = Configuration related to incremental read

incrementalRead.checkColumn.label = Check column
incrementalRead.checkColumn.help = Column that is checked during incremental read for new values

incrementalRead.lastValue.label = Last value
incrementalRead.lastValue.help = Last read value, fetch will resume with higher values


# Dialect
dialect.label = SQL Dialect
dialect.help = Dialect that should be used for generated queries

dialect.identifierEnclose.label = Identifier enclose
dialect.identifierEnclose.help = Character(s) that should be used to enclose table name, schema, column names, ...
